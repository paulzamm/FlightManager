### ========================================
### Flight Manager API - REST Client
### ExtensiÃ³n: REST Client for VS Code
### ========================================

@baseUrl = http://localhost:8000
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJqdWFuLnBlcmV6QGV4YW1wbGUuY29tIiwiZXhwIjoxNzYxNjI3NDgyfQ.J17LpBoCK_dwNGqh3mahMnHlNNaNwt8XknIRRRGmmPY

### ========================================
### ðŸ“‹ FLUJO COMPLETO RECOMENDADO
### ========================================
### 1. Login (1.2) â†’ Copiar token
### 2. Buscar Vuelos (2.1) â†’ Anotar ID de vuelo
### 3. Ver Asientos (2.4) â†’ Anotar IDs DISPONIBLES
### 4. Registrar Tarjeta (4.1) â†’ Anotar ID de tarjeta
### 5. Crear Reserva (3.1) â†’ Usar IDs de asientos
### 6. Comprar Billete (5.1) â†’ Usar IDs de reserva y tarjeta
### 7. Ver Mis Billetes (5.3) â†’ Verificar compra
### ========================================

### ========================================
### 1. AUTENTICACIÃ“N
### ========================================

### 1.1 Registrar Usuario
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "nombre_completo": "Test Usuario",
  "email": "test@example.com",
  "password": "password123"
}

### 1.2 Login (Obtener Token)
# @name login
POST {{baseUrl}}/auth/token
Content-Type: application/x-www-form-urlencoded

username=juan.perez@example.com&password=password123

### 1.3 Ver Mi Perfil
GET {{baseUrl}}/auth/me
Authorization: Bearer {{token}}


### ========================================
### 2. VUELOS
### ========================================

### 2.1 Buscar Vuelos por Ruta (UIO â†’ GYE, maÃ±ana)
# Vuelos disponibles: LA2451 (06:00), LA2489 (en +2 dÃ­as)
GET {{baseUrl}}/flights/search?origen=UIO&destino=GYE&fecha=2025-10-28

### 2.1b Buscar Vuelos por Ruta (GYE â†’ UIO, maÃ±ana)
GET {{baseUrl}}/flights/search?origen=GYE&destino=UIO&fecha=2025-10-28

### 2.1c Buscar Vuelos por Ruta (UIO â†’ CUE, en 2 dÃ­as)
GET {{baseUrl}}/flights/search?origen=UIO&destino=CUE&fecha=2025-10-29

### 2.1d Buscar Vuelos por Ruta (GYE â†’ MCH, maÃ±ana)
GET {{baseUrl}}/flights/search?origen=GYE&destino=MCH&fecha=2025-10-28

### 2.2 Buscar Vuelos por Precio (UIO â†’ GYE)
GET {{baseUrl}}/flights/search/by-price?origen=UIO&destino=GYE&fecha=2025-10-28

### 2.2b Buscar Vuelos por Precio (UIO â†’ BOG)
GET {{baseUrl}}/flights/search/by-price?origen=UIO&destino=BOG&fecha=2025-10-29

### 2.3 BÃºsqueda Avanzada (UIO â†’ GYE, ordenar por precio)
GET {{baseUrl}}/flights/search/advanced?origen=UIO&destino=GYE&fecha=2025-10-28&ordenar_por=precio

### 2.3b BÃºsqueda Avanzada (UIO â†’ cualquiera, LATAM Airlines)
GET {{baseUrl}}/flights/search/advanced?origen=UIO&destino=GYE&fecha=2025-10-28&aerolinea=LA&ordenar_por=precio

### 2.3c BÃºsqueda Avanzada (UIO â†’ LIM, ordenar por horario)
GET {{baseUrl}}/flights/search/advanced?origen=UIO&destino=LIM&fecha=2025-10-31&ordenar_por=horario

### 2.4 Ver Asientos del Vuelo (usa un ID real de los resultados anteriores)
# Primero ejecuta 2.1 y copia un ID de vuelo de la respuesta
GET {{baseUrl}}/flights/1/seats?categoria=Economica

### 2.4b Ver Asientos Business Class
GET {{baseUrl}}/flights/1/seats?categoria=Business

### 2.4c Ver TODOS los Asientos (sin filtro)
GET {{baseUrl}}/flights/1/seats


### ========================================
### 3. RESERVAS
### ========================================

### 3.1 Crear Reserva (1 pasajero, 1 asiento)
# IMPORTANTE: Primero ejecuta 2.4 para obtener IDs de asientos DISPONIBLES
# Copia IDs de asientos con "estado": "Disponible"
POST {{baseUrl}}/reservas
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "pasajeros": [
    {
      "nombre_completo": "Juan PÃ©rez GarcÃ­a",
      "documento_identidad": "1234567890",
      "id_asiento": 55
    }
  ]
}

### 3.1b Crear Reserva (2 pasajeros, 2 asientos)
POST {{baseUrl}}/reservas
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "pasajeros": [
    {
      "nombre_completo": "MarÃ­a GarcÃ­a LÃ³pez",
      "documento_identidad": "0987654321",
      "id_asiento": 57
    },
    {
      "nombre_completo": "Carlos GarcÃ­a PÃ©rez",
      "documento_identidad": "1122334455",
      "id_asiento": 59
    }
  ]
}

### 3.2 Ver Mis Reservas (todas)
GET {{baseUrl}}/reservas/me
Authorization: Bearer {{token}}

### 3.2b Ver Solo Reservas Pendientes
GET {{baseUrl}}/reservas/me?estado=Pendiente
Authorization: Bearer {{token}}

### 3.2c Ver Solo Reservas Confirmadas
GET {{baseUrl}}/reservas/me?estado=Confirmada
Authorization: Bearer {{token}}

### 3.3 Ver Detalle de Reserva (usa ID real de 3.2)
GET {{baseUrl}}/reservas/1
Authorization: Bearer {{token}}

### 3.4 Cambiar Asiento (usa IDs reales de 3.3)
# Primero obtÃ©n IDs de: reserva, pasajero, y nuevo asiento disponible
PUT {{baseUrl}}/reservas/change-seat
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "id_reserva": 1,
  "id_pasajero": 1,
  "nuevo_id_asiento": 56
}

### 3.5 Cancelar Reserva (usa ID real)
PATCH {{baseUrl}}/reservas/1/cancel
Authorization: Bearer {{token}}

### 3.6 Contar Mis Reservas
GET {{baseUrl}}/reservas/me/count
Authorization: Bearer {{token}}


### ========================================
### 4. TARJETAS DE CRÃ‰DITO
### ========================================

### 4.1 Registrar Tarjeta Visa
POST {{baseUrl}}/tarjetas
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "numero_tarjeta": "4532015112830366",
  "fecha_expiracion": "12/27",
  "nombre_titular": "Juan Perez"
}

### 4.1b Registrar Tarjeta Mastercard
POST {{baseUrl}}/tarjetas
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "numero_tarjeta": "5425233430109903",
  "fecha_expiracion": "09/26",
  "nombre_titular": "Juan Perez",
}

### 4.2 Ver Mis Tarjetas (solo Ãºltimos 4 dÃ­gitos visibles)
GET {{baseUrl}}/tarjetas/me
Authorization: Bearer {{token}}

### 4.3 Establecer Tarjeta Predeterminada (usa ID real de 4.2)
PATCH {{baseUrl}}/tarjetas/1/set-default
Authorization: Bearer {{token}}

### 4.4 Eliminar Tarjeta (usa ID real de 4.2)
DELETE {{baseUrl}}/tarjetas/2
Authorization: Bearer {{token}}


### ========================================
### 5. BILLETES (FLUJO COMPLETO DE COMPRA)
### ========================================

### 5.1 Comprar Billete (usa IDs reales)
# Necesitas: 1) Una reserva PENDIENTE (de 3.2), 2) Una tarjeta (de 4.2)
POST {{baseUrl}}/billetes/purchase
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "id_reserva": 1,
  "id_tarjeta_credito": 1
}

### 5.2 Ver por CÃ³digo ConfirmaciÃ³n (usa cÃ³digo de 5.1)
# Copia el "codigo_confirmacion" de la respuesta de 5.1
GET {{baseUrl}}/billetes/confirmation/ABC123XYZ
Authorization: Bearer {{token}}

### 5.3 Ver Mis Billetes (todos los comprados)
GET {{baseUrl}}/billetes/me
Authorization: Bearer {{token}}

### 5.4 Enviar Billete por Email (usa ID real de 5.3)
POST {{baseUrl}}/billetes/1/send-email?email_destino=mi-email@example.com
Authorization: Bearer {{token}}

### 5.5 Ver Info Check-in (usa ID real de 5.3)
GET {{baseUrl}}/billetes/1/pickup-info
Authorization: Bearer {{token}}

### 5.6 Contar Mis Billetes
GET {{baseUrl}}/billetes/me/count
Authorization: Bearer {{token}}


### ========================================
### 6. GESTIÃ“N DE USUARIO
### ========================================

### 6.1 Ver Perfil Completo
GET {{baseUrl}}/users/me/profile
Authorization: Bearer {{token}}

### 6.2 Actualizar Perfil
PUT {{baseUrl}}/users/me
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "nombre_completo": "Juan Carlos PÃ©rez GarcÃ­a",
  "email": "juan.perez.nuevo@example.com"
}

### 6.3 Cambiar ContraseÃ±a
PATCH {{baseUrl}}/users/me/change-password
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "password_actual": "password123",
  "password_nueva": "nuevaPassword456"
}

### 6.4 Eliminar Cuenta (CUIDADO)
DELETE {{baseUrl}}/users/me
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "confirmacion": "ELIMINAR",
  "password": "password123"
}


### ========================================
### OTROS USUARIOS DE PRUEBA
### ========================================
### admin@flightmanager.com / admin123
### maria.garcia@example.com / password123
### carlos.lopez@example.com / password123
